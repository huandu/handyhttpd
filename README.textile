h1. handyhttpd - A Handy HTTP Server

A handy http server to enable public http access on any folder within a few seconds. It can only serve static files.

Feel free to let me know your comment on twitter. My account is "@huandu":https://twitter.com/huandu.

h2. Quick Tutorial

First of all, build the binary on your server. You have to install "go":http://golang.org/ before you start.

<pre>
git clone http://github.com/huandu/handyhttpd
cd handyhttpd
go build
</pre>

Then you should have got a binary file "handyhttpd". Copy it to a dir in $PATH. Run it in any dir you want public http access.

<pre>
[user@server /your/dir/for/http]$ nohup handyhttpd &
</pre>

It's done. You can visit your dir in any browser thru url http://server-ip:9696/http/

Mind the "nohup" and "&". First handyhttpd instance should work as a daemon. However, "go" "doesn't support daemon mode":http://stackoverflow.com/questions/10027477/golang-fork-process. You have to use this trick to put it in background.

Luckily, you have to do this only once. If you need to serve more dirs, just simply call the handy. This call will notify the running handy daemon with correct parameters and then quit.

<pre>
[user@server /your/another/dir]$ handyhttpd                      # return instantly
[user@server /your/another/dir]$ curl http://server-ip:9696/dir/ # to see your dir
</pre>

Base url is the current dir name calling the handy. You can change the url by using <code>--alias</code> option.

By default, the handy will listen port 80. If it fails (e.g. not a root account or 80 is in use), it will use port 9696 instead. You can also use <code>--port</code> option to change it to your favorate number.

If you want to disable http access on a dir any more, just go to that dir and run the handy with <code>--remove</code> option.

Last but not least, use following command to shutdown the handy completely.

<pre>
[user@server ~]$ handyhttpd --quit
</pre>

h2. Advanced Usage

Sorry, there is no advanced usage. It's just a very very simple httpd. :P

Use <code>--help</code> to explore all handyhttpd options and have fun.

h2. Comparisions With <code>python -m SimpleHTTPServer</code>

The handyhttpd is a bit more complex and useful than <code>python -m SimpleHTTPServer</code>.

Besides all <code>python -m SimpleHTTPServer</code> features, the handy is able to

* serve more than one dir on a single port.
* run only one server instance at once - much easy to manage. Thinking that you are able to start the handyhttpd on one ssh terminal and modify/shutdown it on another.

The major difference between these two implementation is the url. The python implementation always use "/" as document root, while the handy requires an alias (say "foo" for /path/to/foo/) and serve "/foo/" as document root.
